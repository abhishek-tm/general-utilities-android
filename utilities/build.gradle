apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    publishedGroupId = 'com.github.abhishek-tm'
    libraryName = 'Utilities'
    artifact = 'utilities'

    libraryDescription = 'Google map utilities and services'

    siteUrl = 'https://github.com/abhishek-tm/general-utilities-android'
    gitUrl = 'https://github.com/abhishek-tm/general-utilities-android.git'

    libraryVersion = '1.0.8'

    developerId = 'abhishek-tm'
    developerName = 'Abhishek Jain'
    developerEmail = 'abhishek@teramatrix.in'

    licenseName = 'The GNU General Public License, Version 3.0'
    licenseUrl = 'http://www.gnu.org/licenses/gpl-3.0.html'
    allLicenses = ["GPL-3.0"]
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.google.android.gms:play-services-plus:10.2.1'
    compile 'com.google.android.gms:play-services-maps:10.2.1'
    compile 'com.google.android.gms:play-services-analytics:10.2.1'
    compile 'com.google.android.gms:play-services-location:10.2.1'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task javadocGenerate(type: Javadoc) {
    // prints javadoc outputs when info logging level set
    logging.captureStandardError LogLevel.INFO

    description = "Generates javadoc"
    source = android.sourceSets.main.java.srcDirs

    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocPackage(dependsOn: javadocGenerate, type: Jar) {
    baseName = artifact
    classifier = "javadoc"
    version libraryVersion
    from tasks.javadocGenerate.destinationDir
}

task sourcePackage(type: Jar) {
    baseName = artifact
    classifier = "sources"
    version libraryVersion
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocPackage, sourcePackage
}